// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContactPage /> should render and match the snapshot 1`] = `
<ContactPage
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "portfolio.component.BrandLink.title": "← Back to the homepage",
        "portfolio.component.ContentLoadingIndicator.error": "Terribly sorry, but the content cannot be loaded at this time",
        "portfolio.component.ContentLoadingIndicator.pastDelay": "Loading content",
        "portfolio.component.ContentLoadingIndicator.timedOut": "Loading is taking longer than expected",
        "portfolio.components.Form.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
        "portfolio.components.Form.helperText.valid": "Thanks!",
        "portfolio.components.LanguageMenu.buttonLabel": "Language",
        "portfolio.components.LanguageMenu.label": "Choose a Language",
        "portfolio.components.LanguageMenu.title": "Language menu",
        "portfolio.components.Project.detailsLink": "More details →",
        "portfolio.components.ProjectDetails.backLink": "← Back to Projects",
        "portfolio.components.SubmitButton.error": "Failed. Please try again",
        "portfolio.components.SubmitButton.idle": "Send",
        "portfolio.components.SubmitButton.sending": "Sending...",
        "portfolio.components.SubmitButton.success": "Sent! I'll respond as soon as possible",
        "portfolio.containers.ContactPage.emailError": "Your email address is required.",
        "portfolio.containers.ContactPage.emailLabel": "Your email address",
        "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
        "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
        "portfolio.containers.ContactPage.meta.description": "For contacting me, please fill in this form. I will respond as soon as possible",
        "portfolio.containers.ContactPage.nameError": "Your name is required.",
        "portfolio.containers.ContactPage.nameLabel": "Your name",
        "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
        "portfolio.containers.ContactPage.nameText": "Please add your name here.",
        "portfolio.containers.ContactPage.pageTitle": "CONTACT FORM",
        "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
        "portfolio.containers.ContactPage.subjectError": "A subject is required.",
        "portfolio.containers.ContactPage.subjectLabel": "Subject",
        "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
        "portfolio.containers.ContactPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
        "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
        "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
        "portfolio.meta.description": "This is the portfolio website of Johan Meester. An Amsterdam based Front-End Developer specialized in React JS",
        "portfolio.meta.siteName": "Johan Meester : Portfolio",
        "portfolio.nav.about": "About",
        "portfolio.nav.contact": "Contact",
        "portfolio.nav.header": "Site navigation",
        "portfolio.nav.home": "Intro",
        "portfolio.nav.projects": "Projects",
        "portfolio.nav.showMenuButton": "MENU",
        "portfolio.nav.skills": "Skills",
        "portfolio.noscript": "If you are seeing this message, that means that JavaScript has been disabled on your browser. Please enable JavaScript to make this app work.",
        "portfolio.page.AboutPage.meta.description": "A short description about me and my professional life",
        "portfolio.page.AboutPage.pageTitle": "ABOUT ME",
        "portfolio.page.AboutPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.page.NotFoundPage.contact": "contact",
        "portfolio.page.NotFoundPage.content": "I am sorry, but the page you requested does not exist or has been removed.

Please go to the {home} page or, if you think this is an error, to the {contact} page and contact me.",
        "portfolio.page.NotFoundPage.home": "start",
        "portfolio.page.NotFoundPage.pageDescription": "The page you requested does not exist or has been removed. Sorry about that",
        "portfolio.page.NotFoundPage.pageTitle": "NOT FOUND",
        "portfolio.page.NotFoundPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.page.ProjectsPage.meta.description": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
        "portfolio.page.ProjectsPage.pageTitle": "MY PROJECTS",
        "portfolio.page.ProjectsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.page.SkillsPage.meta.description": "A brief overview of my professional skills",
        "portfolio.page.SkillsPage.pageTitle": "MY SKILLS",
        "portfolio.page.SkillsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.page.index.header.callToAction": "CONTACT ME",
        "portfolio.page.index.header.greeting": "WELCOME",
        "portfolio.page.index.header.intro": "I am {name}",
        "portfolio.page.index.header.look": "HAVE A LOOK AROUND",
        "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
        "portfolio.page.index.meta.description": "Welcome to the portfolio of Johan Meester, Front-End Developer",
        "portfolio.page.index.pageTitle": "INTRODUCTION",
        "portfolio.page.index.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
        "portfolio.skiplink": "skip to main content",
        "portfolio.social_links.header": "Also find me on:",
        "portfolio.title": "Johan Meester : Portfolio : Front-End Developer",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "emailError": Object {
          "defaultMessage": "Your email address is required.",
          "id": "portfolio.containers.ContactPage.emailError",
        },
        "emailLabel": Object {
          "defaultMessage": "Your email address",
          "id": "portfolio.containers.ContactPage.emailLabel",
        },
        "emailPlaceholder": Object {
          "defaultMessage": "(e.g. my@email.com)",
          "id": "portfolio.containers.ContactPage.emailPlaceholder",
        },
        "emailText": Object {
          "defaultMessage": "Please add your email address here.",
          "id": "portfolio.containers.ContactPage.emailText",
        },
        "metaDescription": Object {
          "defaultMessage": "For contacting me, please fill in this form. I will respond as soon as possible",
          "id": "portfolio.containers.ContactPage.meta.description",
        },
        "nameError": Object {
          "defaultMessage": "Your name is required.",
          "id": "portfolio.containers.ContactPage.nameError",
        },
        "nameLabel": Object {
          "defaultMessage": "Your name",
          "id": "portfolio.containers.ContactPage.nameLabel",
        },
        "namePlaceholder": Object {
          "defaultMessage": "(e.g. John Doo)",
          "id": "portfolio.containers.ContactPage.namePlaceholder",
        },
        "nameText": Object {
          "defaultMessage": "Please add your name here.",
          "id": "portfolio.containers.ContactPage.nameText",
        },
        "pageTitle": Object {
          "defaultMessage": "CONTACT ME",
          "id": "portfolio.containers.ContactPage.pageTitle",
        },
        "requirementOne": Object {
          "defaultMessage": "Please fill all fields",
          "id": "portfolio.containers.ContactPage.requirementOne",
        },
        "subjectError": Object {
          "defaultMessage": "A subject is required.",
          "id": "portfolio.containers.ContactPage.subjectError",
        },
        "subjectLabel": Object {
          "defaultMessage": "Subject",
          "id": "portfolio.containers.ContactPage.subjectLabel",
        },
        "subjectText": Object {
          "defaultMessage": "Please provide a subject for your message.",
          "id": "portfolio.containers.ContactPage.subjectText",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.containers.ContactPage.title",
        },
        "yourMessageError": Object {
          "defaultMessage": "A message is required.",
          "id": "portfolio.containers.ContactPage.yourMessageError",
        },
        "yourMessageLabel": Object {
          "defaultMessage": "Your message",
          "id": "portfolio.containers.ContactPage.yourMessageLabel",
        },
        "yourMessageText": Object {
          "defaultMessage": "Please add your message here.",
          "id": "portfolio.containers.ContactPage.yourMessageText",
        },
      }
    }
    path="/contact"
  >
    <HeadGear
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "portfolio.component.BrandLink.title": "← Back to the homepage",
            "portfolio.component.ContentLoadingIndicator.error": "Terribly sorry, but the content cannot be loaded at this time",
            "portfolio.component.ContentLoadingIndicator.pastDelay": "Loading content",
            "portfolio.component.ContentLoadingIndicator.timedOut": "Loading is taking longer than expected",
            "portfolio.components.Form.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
            "portfolio.components.Form.helperText.valid": "Thanks!",
            "portfolio.components.LanguageMenu.buttonLabel": "Language",
            "portfolio.components.LanguageMenu.label": "Choose a Language",
            "portfolio.components.LanguageMenu.title": "Language menu",
            "portfolio.components.Project.detailsLink": "More details →",
            "portfolio.components.ProjectDetails.backLink": "← Back to Projects",
            "portfolio.components.SubmitButton.error": "Failed. Please try again",
            "portfolio.components.SubmitButton.idle": "Send",
            "portfolio.components.SubmitButton.sending": "Sending...",
            "portfolio.components.SubmitButton.success": "Sent! I'll respond as soon as possible",
            "portfolio.containers.ContactPage.emailError": "Your email address is required.",
            "portfolio.containers.ContactPage.emailLabel": "Your email address",
            "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
            "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
            "portfolio.containers.ContactPage.meta.description": "For contacting me, please fill in this form. I will respond as soon as possible",
            "portfolio.containers.ContactPage.nameError": "Your name is required.",
            "portfolio.containers.ContactPage.nameLabel": "Your name",
            "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
            "portfolio.containers.ContactPage.nameText": "Please add your name here.",
            "portfolio.containers.ContactPage.pageTitle": "CONTACT FORM",
            "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
            "portfolio.containers.ContactPage.subjectError": "A subject is required.",
            "portfolio.containers.ContactPage.subjectLabel": "Subject",
            "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
            "portfolio.containers.ContactPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
            "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
            "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
            "portfolio.meta.description": "This is the portfolio website of Johan Meester. An Amsterdam based Front-End Developer specialized in React JS",
            "portfolio.meta.siteName": "Johan Meester : Portfolio",
            "portfolio.nav.about": "About",
            "portfolio.nav.contact": "Contact",
            "portfolio.nav.header": "Site navigation",
            "portfolio.nav.home": "Intro",
            "portfolio.nav.projects": "Projects",
            "portfolio.nav.showMenuButton": "MENU",
            "portfolio.nav.skills": "Skills",
            "portfolio.noscript": "If you are seeing this message, that means that JavaScript has been disabled on your browser. Please enable JavaScript to make this app work.",
            "portfolio.page.AboutPage.meta.description": "A short description about me and my professional life",
            "portfolio.page.AboutPage.pageTitle": "ABOUT ME",
            "portfolio.page.AboutPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.page.NotFoundPage.contact": "contact",
            "portfolio.page.NotFoundPage.content": "I am sorry, but the page you requested does not exist or has been removed.

Please go to the {home} page or, if you think this is an error, to the {contact} page and contact me.",
            "portfolio.page.NotFoundPage.home": "start",
            "portfolio.page.NotFoundPage.pageDescription": "The page you requested does not exist or has been removed. Sorry about that",
            "portfolio.page.NotFoundPage.pageTitle": "NOT FOUND",
            "portfolio.page.NotFoundPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.page.ProjectsPage.meta.description": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
            "portfolio.page.ProjectsPage.pageTitle": "MY PROJECTS",
            "portfolio.page.ProjectsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.page.SkillsPage.meta.description": "A brief overview of my professional skills",
            "portfolio.page.SkillsPage.pageTitle": "MY SKILLS",
            "portfolio.page.SkillsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.page.index.header.callToAction": "CONTACT ME",
            "portfolio.page.index.header.greeting": "WELCOME",
            "portfolio.page.index.header.intro": "I am {name}",
            "portfolio.page.index.header.look": "HAVE A LOOK AROUND",
            "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
            "portfolio.page.index.meta.description": "Welcome to the portfolio of Johan Meester, Front-End Developer",
            "portfolio.page.index.pageTitle": "INTRODUCTION",
            "portfolio.page.index.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "portfolio.skiplink": "skip to main content",
            "portfolio.social_links.header": "Also find me on:",
            "portfolio.title": "Johan Meester : Portfolio : Front-End Developer",
          },
          "now": [Function],
          "textComponent": "span",
        }
      }
      messages={
        Object {
          "emailError": Object {
            "defaultMessage": "Your email address is required.",
            "id": "portfolio.containers.ContactPage.emailError",
          },
          "emailLabel": Object {
            "defaultMessage": "Your email address",
            "id": "portfolio.containers.ContactPage.emailLabel",
          },
          "emailPlaceholder": Object {
            "defaultMessage": "(e.g. my@email.com)",
            "id": "portfolio.containers.ContactPage.emailPlaceholder",
          },
          "emailText": Object {
            "defaultMessage": "Please add your email address here.",
            "id": "portfolio.containers.ContactPage.emailText",
          },
          "metaDescription": Object {
            "defaultMessage": "For contacting me, please fill in this form. I will respond as soon as possible",
            "id": "portfolio.containers.ContactPage.meta.description",
          },
          "nameError": Object {
            "defaultMessage": "Your name is required.",
            "id": "portfolio.containers.ContactPage.nameError",
          },
          "nameLabel": Object {
            "defaultMessage": "Your name",
            "id": "portfolio.containers.ContactPage.nameLabel",
          },
          "namePlaceholder": Object {
            "defaultMessage": "(e.g. John Doo)",
            "id": "portfolio.containers.ContactPage.namePlaceholder",
          },
          "nameText": Object {
            "defaultMessage": "Please add your name here.",
            "id": "portfolio.containers.ContactPage.nameText",
          },
          "pageTitle": Object {
            "defaultMessage": "CONTACT ME",
            "id": "portfolio.containers.ContactPage.pageTitle",
          },
          "requirementOne": Object {
            "defaultMessage": "Please fill all fields",
            "id": "portfolio.containers.ContactPage.requirementOne",
          },
          "subjectError": Object {
            "defaultMessage": "A subject is required.",
            "id": "portfolio.containers.ContactPage.subjectError",
          },
          "subjectLabel": Object {
            "defaultMessage": "Subject",
            "id": "portfolio.containers.ContactPage.subjectLabel",
          },
          "subjectText": Object {
            "defaultMessage": "Please provide a subject for your message.",
            "id": "portfolio.containers.ContactPage.subjectText",
          },
          "title": Object {
            "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
            "id": "portfolio.containers.ContactPage.title",
          },
          "yourMessageError": Object {
            "defaultMessage": "A message is required.",
            "id": "portfolio.containers.ContactPage.yourMessageError",
          },
          "yourMessageLabel": Object {
            "defaultMessage": "Your message",
            "id": "portfolio.containers.ContactPage.yourMessageLabel",
          },
          "yourMessageText": Object {
            "defaultMessage": "Please add your message here.",
            "id": "portfolio.containers.ContactPage.yourMessageText",
          },
        }
      }
      path="/contact"
    >
      <HelmetWrapper
        defer={true}
        encodeSpecialCharacters={true}
        link={
          Array [
            Object {
              "href": "https://meester-johan.info/contact/",
              "rel": "canonical",
            },
            Object {
              "href": "https://meester-johan.info/contact/",
              "hreflang": "x-default",
              "rel": "alternate",
            },
          ]
        }
        meta={
          Array [
            Object {
              "content": "For contacting me, please fill in this form. I will respond as soon as possible",
              "name": "description",
            },
            Object {
              "content": "For contacting me, please fill in this form. I will respond as soon as possible",
              "property": "og:description",
            },
            Object {
              "content": "Johan Meester : Portfolio : Front-End Developer : CONTACT FORM",
              "property": "og:title",
            },
            Object {
              "content": "https://meester-johan.info/contact/",
              "property": "og.url",
            },
          ]
        }
        title="Johan Meester : Portfolio : Front-End Developer : CONTACT FORM"
      >
        <SideEffect(NullComponent)
          defer={true}
          encodeSpecialCharacters={true}
          link={
            Array [
              Object {
                "href": "https://meester-johan.info/contact/",
                "rel": "canonical",
              },
              Object {
                "href": "https://meester-johan.info/contact/",
                "hreflang": "x-default",
                "rel": "alternate",
              },
            ]
          }
          meta={
            Array [
              Object {
                "content": "For contacting me, please fill in this form. I will respond as soon as possible",
                "name": "description",
              },
              Object {
                "content": "For contacting me, please fill in this form. I will respond as soon as possible",
                "property": "og:description",
              },
              Object {
                "content": "Johan Meester : Portfolio : Front-End Developer : CONTACT FORM",
                "property": "og:title",
              },
              Object {
                "content": "https://meester-johan.info/contact/",
                "property": "og.url",
              },
            ]
          }
          title="Johan Meester : Portfolio : Front-End Developer : CONTACT FORM"
        >
          <NullComponent
            defer={true}
            encodeSpecialCharacters={true}
            link={
              Array [
                Object {
                  "href": "https://meester-johan.info/contact/",
                  "rel": "canonical",
                },
                Object {
                  "href": "https://meester-johan.info/contact/",
                  "hreflang": "x-default",
                  "rel": "alternate",
                },
              ]
            }
            meta={
              Array [
                Object {
                  "content": "For contacting me, please fill in this form. I will respond as soon as possible",
                  "name": "description",
                },
                Object {
                  "content": "For contacting me, please fill in this form. I will respond as soon as possible",
                  "property": "og:description",
                },
                Object {
                  "content": "Johan Meester : Portfolio : Front-End Developer : CONTACT FORM",
                  "property": "og:title",
                },
                Object {
                  "content": "https://meester-johan.info/contact/",
                  "property": "og.url",
                },
              ]
            }
            title="Johan Meester : Portfolio : Front-End Developer : CONTACT FORM"
          />
        </SideEffect(NullComponent)>
      </HelmetWrapper>
    </HeadGear>
  </InjectIntl(HeadGear)>
  <PageContent
    content={
      <InjectIntl(ContactForm)
        changeHandler={[Function]}
        field={
          Object {
            "email": "",
            "message": "",
            "name": "",
            "subject": "",
          }
        }
        fieldError={Object {}}
        onSubmitHandler={[Function]}
      />
    }
    title={
      <FormattedMessage
        defaultMessage="CONTACT ME"
        id="portfolio.containers.ContactPage.pageTitle"
        values={Object {}}
      />
    }
  >
    <Wrapper
      animate={true}
    >
      <div
        className="Wrapper-ThVjl ipiXwR"
      >
        <PageHeader
          arrowPosition="bottom-left"
        >
          <StyledHeader>
            <header
              className="StyledHeader-fJIKuc cuJATB"
            >
              <SpeechBubble
                arrowHeight="4vh"
                arrowPosition="bottom-left"
                backgroundColor="#465a65"
                isGhost={false}
                makeAppear={true}
                showArrowBreakpoint="750px"
              >
                <Container
                  makeAppear={true}
                  showArrowBreakpoint="750px"
                >
                  <div
                    className="Container-gZqETv hayOh"
                  >
                    <Bubble
                      arrowPosition="bottom-left"
                      backgroundColor="#465a65"
                      isGhost={false}
                      showArrowBreakpoint="750px"
                    >
                      <div
                        className="Bubble-cYQkeS errvuT"
                      >
                        <H2
                          color="#aedd2c"
                        >
                          <h2
                            className="H2-eUbBFj iAWPFe"
                            color="#aedd2c"
                          >
                            <FormattedMessage
                              defaultMessage="CONTACT ME"
                              id="portfolio.containers.ContactPage.pageTitle"
                              values={Object {}}
                            >
                              <span>
                                CONTACT FORM
                              </span>
                            </FormattedMessage>
                          </h2>
                        </H2>
                      </div>
                    </Bubble>
                    <Arrow
                      arrowPosition="bottom-left"
                      backgroundColor="#465a65"
                      height="4vh"
                      isGhost={false}
                      showBreakpoint="750px"
                    >
                      <Arrow__SVG
                        arrowPosition="bottom-left"
                        height="4vh"
                        showBreakpoint="750px"
                      >
                        <svg
                          className="Arrow__SVG-iWxuxU iIEjSv"
                          focusable="false"
                          height="4vh"
                          preserveAspectRatio="xMinYMid meet"
                          viewBox="0 0 848 640"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M424.2 424.4L526.9 640V398.7"
                            fill="#5b7583"
                            stroke="none"
                            strokeWidth="24"
                          />
                          <path
                            d="M848 318.3L424.2 424.4V158.9"
                            fill="#465a65"
                            stroke="none"
                            strokeWidth="24"
                          />
                          <path
                            d="M0 0l848 318.3L636.4 0H0z"
                            fill="#5b7583"
                            stroke="none"
                            strokeWidth="24"
                          />
                        </svg>
                      </Arrow__SVG>
                    </Arrow>
                  </div>
                </Container>
              </SpeechBubble>
            </header>
          </StyledHeader>
        </PageHeader>
        <ContentWrapper>
          <div
            className="ContentWrapper-fNtIWq jXZlqv"
          >
            <SpeechBubble
              arrowHeight="9vh"
              arrowPosition="bottom-right"
              backgroundColor="#aedd2c"
              color="#000"
              isGhost={false}
              makeAppear={false}
              maxWidth="30em"
              padding="1.5rem"
              showArrowBreakpoint="750px"
            >
              <Container
                makeAppear={false}
                maxWidth="30em"
                showArrowBreakpoint="750px"
              >
                <div
                  className="Container-gZqETv jsqDeB"
                >
                  <Bubble
                    arrowPosition="bottom-right"
                    backgroundColor="#aedd2c"
                    color="#000"
                    isGhost={false}
                    padding="1.5rem"
                    showArrowBreakpoint="750px"
                  >
                    <div
                      className="Bubble-cYQkeS bOhOYj"
                      color="#000"
                    >
                      <InjectIntl(ContactForm)
                        changeHandler={[Function]}
                        field={
                          Object {
                            "email": "",
                            "message": "",
                            "name": "",
                            "subject": "",
                          }
                        }
                        fieldError={Object {}}
                        onSubmitHandler={[Function]}
                      >
                        <ContactForm
                          changeHandler={[Function]}
                          field={
                            Object {
                              "email": "",
                              "message": "",
                              "name": "",
                              "subject": "",
                            }
                          }
                          fieldError={Object {}}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {
                                "portfolio.component.BrandLink.title": "← Back to the homepage",
                                "portfolio.component.ContentLoadingIndicator.error": "Terribly sorry, but the content cannot be loaded at this time",
                                "portfolio.component.ContentLoadingIndicator.pastDelay": "Loading content",
                                "portfolio.component.ContentLoadingIndicator.timedOut": "Loading is taking longer than expected",
                                "portfolio.components.Form.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
                                "portfolio.components.Form.helperText.valid": "Thanks!",
                                "portfolio.components.LanguageMenu.buttonLabel": "Language",
                                "portfolio.components.LanguageMenu.label": "Choose a Language",
                                "portfolio.components.LanguageMenu.title": "Language menu",
                                "portfolio.components.Project.detailsLink": "More details →",
                                "portfolio.components.ProjectDetails.backLink": "← Back to Projects",
                                "portfolio.components.SubmitButton.error": "Failed. Please try again",
                                "portfolio.components.SubmitButton.idle": "Send",
                                "portfolio.components.SubmitButton.sending": "Sending...",
                                "portfolio.components.SubmitButton.success": "Sent! I'll respond as soon as possible",
                                "portfolio.containers.ContactPage.emailError": "Your email address is required.",
                                "portfolio.containers.ContactPage.emailLabel": "Your email address",
                                "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
                                "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
                                "portfolio.containers.ContactPage.meta.description": "For contacting me, please fill in this form. I will respond as soon as possible",
                                "portfolio.containers.ContactPage.nameError": "Your name is required.",
                                "portfolio.containers.ContactPage.nameLabel": "Your name",
                                "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
                                "portfolio.containers.ContactPage.nameText": "Please add your name here.",
                                "portfolio.containers.ContactPage.pageTitle": "CONTACT FORM",
                                "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
                                "portfolio.containers.ContactPage.subjectError": "A subject is required.",
                                "portfolio.containers.ContactPage.subjectLabel": "Subject",
                                "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
                                "portfolio.containers.ContactPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
                                "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
                                "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
                                "portfolio.meta.description": "This is the portfolio website of Johan Meester. An Amsterdam based Front-End Developer specialized in React JS",
                                "portfolio.meta.siteName": "Johan Meester : Portfolio",
                                "portfolio.nav.about": "About",
                                "portfolio.nav.contact": "Contact",
                                "portfolio.nav.header": "Site navigation",
                                "portfolio.nav.home": "Intro",
                                "portfolio.nav.projects": "Projects",
                                "portfolio.nav.showMenuButton": "MENU",
                                "portfolio.nav.skills": "Skills",
                                "portfolio.noscript": "If you are seeing this message, that means that JavaScript has been disabled on your browser. Please enable JavaScript to make this app work.",
                                "portfolio.page.AboutPage.meta.description": "A short description about me and my professional life",
                                "portfolio.page.AboutPage.pageTitle": "ABOUT ME",
                                "portfolio.page.AboutPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.page.NotFoundPage.contact": "contact",
                                "portfolio.page.NotFoundPage.content": "I am sorry, but the page you requested does not exist or has been removed.

Please go to the {home} page or, if you think this is an error, to the {contact} page and contact me.",
                                "portfolio.page.NotFoundPage.home": "start",
                                "portfolio.page.NotFoundPage.pageDescription": "The page you requested does not exist or has been removed. Sorry about that",
                                "portfolio.page.NotFoundPage.pageTitle": "NOT FOUND",
                                "portfolio.page.NotFoundPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.page.ProjectsPage.meta.description": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
                                "portfolio.page.ProjectsPage.pageTitle": "MY PROJECTS",
                                "portfolio.page.ProjectsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.page.SkillsPage.meta.description": "A brief overview of my professional skills",
                                "portfolio.page.SkillsPage.pageTitle": "MY SKILLS",
                                "portfolio.page.SkillsPage.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.page.index.header.callToAction": "CONTACT ME",
                                "portfolio.page.index.header.greeting": "WELCOME",
                                "portfolio.page.index.header.intro": "I am {name}",
                                "portfolio.page.index.header.look": "HAVE A LOOK AROUND",
                                "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
                                "portfolio.page.index.meta.description": "Welcome to the portfolio of Johan Meester, Front-End Developer",
                                "portfolio.page.index.pageTitle": "INTRODUCTION",
                                "portfolio.page.index.title": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
                                "portfolio.skiplink": "skip to main content",
                                "portfolio.social_links.header": "Also find me on:",
                                "portfolio.title": "Johan Meester : Portfolio : Front-End Developer",
                              },
                              "now": [Function],
                              "textComponent": "span",
                            }
                          }
                          onSubmitHandler={[Function]}
                        >
                          <Form
                            onChange={[Function]}
                            onSubmit={[Function]}
                          >
                            <form
                              className="Form-dhHGoS esfMlR"
                              onChange={[Function]}
                              onSubmit={[Function]}
                            >
                              <div>
                                <div>
                                  <div>
                                    <InfoList>
                                      <ul
                                        className="InfoList-bFUbOM JIzhr"
                                      >
                                        <InfoListItem>
                                          <InfoListItem__Li>
                                            <li
                                              className="InfoListItem__Li-fMSWPj hCpuSE"
                                            >
                                              <SVGIcon
                                                viewBox="0 0 512 512"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="SVGIcon-ixpDyI gIDnTS"
                                                  focusable="false"
                                                  viewBox="0 0 512 512"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"
                                                  />
                                                </svg>
                                              </SVGIcon>
                                              <InfoListItem__Span>
                                                <span
                                                  className="InfoListItem__Span-iuvfSH gxPpOU"
                                                >
                                                  <FormattedMessage
                                                    defaultMessage="Please fill all fields"
                                                    id="portfolio.containers.ContactPage.requirementOne"
                                                    values={Object {}}
                                                  >
                                                    <span>
                                                      Please fill in all fields
                                                    </span>
                                                  </FormattedMessage>
                                                </span>
                                              </InfoListItem__Span>
                                            </li>
                                          </InfoListItem__Li>
                                        </InfoListItem>
                                      </ul>
                                    </InfoList>
                                  </div>
                                  <div>
                                    <Input
                                      changeHandler={[Function]}
                                      helperText="Please provide a subject for your message."
                                      inputType="text"
                                      label="Subject"
                                      maxLength={50}
                                      minLength={3}
                                      name="subject"
                                      validate={[Function]}
                                      value=""
                                    >
                                      <InputGroup>
                                        <div
                                          className="InputGroup-bLbrFg lklykp"
                                        >
                                          <Label
                                            htmlFor="name"
                                            onClick={[Function]}
                                          >
                                            <label
                                              className="Label-bxMjsr cBsFJx"
                                              htmlFor="name"
                                              onClick={[Function]}
                                            >
                                              <LabelContent
                                                hasFocus={false}
                                              >
                                                <span
                                                  className="LabelContent-gWnUXw eGuzay"
                                                >
                                                  Subject
                                                  <Placeholder
                                                    hasFocus={false}
                                                  >
                                                    <span
                                                      className="Placeholder-iEcLMX fbeOYY"
                                                    >
                                                      <i />
                                                    </span>
                                                  </Placeholder>
                                                </span>
                                              </LabelContent>
                                            </label>
                                          </Label>
                                          <StyledInput
                                            innerRef={[Function]}
                                            name="subject"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="StyledInput-dwXrMm kInwBn"
                                              name="subject"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledInput>
                                          <SubText>
                                            <div
                                              className="SubText-VSxHA eYTSar"
                                            >
                                              <ErrorMessage
                                                showError={false}
                                              >
                                                <span
                                                  className="ErrorMessage-eJhZpN cVajIv"
                                                >
                                                  false 
                                                </span>
                                              </ErrorMessage>
                                              <span>
                                                <span>
                                                  Please provide a subject for your message.
                                                   
                                                  <FormattedMessage
                                                    defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
                                                    id="portfolio.components.Form.helperText.range"
                                                    values={
                                                      Object {
                                                        "count": 0,
                                                        "maxLength": 50,
                                                        "minLength": 3,
                                                      }
                                                    }
                                                  >
                                                    <span>
                                                      Should be between 3 and 50 characters. Is now: 0
                                                    </span>
                                                  </FormattedMessage>
                                                </span>
                                              </span>
                                            </div>
                                          </SubText>
                                        </div>
                                      </InputGroup>
                                    </Input>
                                    <TextArea
                                      changeHandler={[Function]}
                                      helperText="Please add your message here."
                                      label="Your message"
                                      maxLength={300}
                                      minLength={5}
                                      name="message"
                                      validate={[Function]}
                                      value=""
                                    >
                                      <InputGroup>
                                        <div
                                          className="InputGroup-bLbrFg lklykp"
                                        >
                                          <Label
                                            htmlFor="name"
                                            onClick={[Function]}
                                          >
                                            <label
                                              className="Label-bxMjsr cBsFJx"
                                              htmlFor="name"
                                              onClick={[Function]}
                                            >
                                              <LabelContent
                                                hasFocus={false}
                                              >
                                                <span
                                                  className="LabelContent-gWnUXw eGuzay"
                                                >
                                                  Your message
                                                  <Placeholder
                                                    hasFocus={false}
                                                  >
                                                    <span
                                                      className="Placeholder-iEcLMX fbeOYY"
                                                    >
                                                      <i />
                                                    </span>
                                                  </Placeholder>
                                                </span>
                                              </LabelContent>
                                            </label>
                                          </Label>
                                          <StyledTextArea
                                            innerRef={[Function]}
                                            myHeight={0}
                                            name="message"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value=""
                                          >
                                            <textarea
                                              className="StyledTextArea-kINxWV hZhUcn"
                                              name="message"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              value=""
                                            />
                                          </StyledTextArea>
                                          <SubText>
                                            <div
                                              className="SubText-VSxHA eYTSar"
                                            >
                                              <ErrorMessage
                                                showError={false}
                                              >
                                                <span
                                                  className="ErrorMessage-eJhZpN cVajIv"
                                                >
                                                  false 
                                                </span>
                                              </ErrorMessage>
                                              <span>
                                                <span>
                                                  Please add your message here.
                                                   
                                                  <FormattedMessage
                                                    defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
                                                    id="portfolio.components.Form.helperText.range"
                                                    values={
                                                      Object {
                                                        "count": 0,
                                                        "maxLength": 300,
                                                        "minLength": 5,
                                                      }
                                                    }
                                                  >
                                                    <span>
                                                      Should be between 5 and 300 characters. Is now: 0
                                                    </span>
                                                  </FormattedMessage>
                                                </span>
                                              </span>
                                            </div>
                                          </SubText>
                                        </div>
                                      </InputGroup>
                                    </TextArea>
                                    <Input
                                      changeHandler={[Function]}
                                      helperText="Please add your name here."
                                      inputType="text"
                                      label="Your name"
                                      maxLength={50}
                                      minLength={2}
                                      name="name"
                                      placeholder="(e.g. John Doo)"
                                      validate={[Function]}
                                      value=""
                                    >
                                      <InputGroup>
                                        <div
                                          className="InputGroup-bLbrFg lklykp"
                                        >
                                          <Label
                                            htmlFor="name"
                                            onClick={[Function]}
                                          >
                                            <label
                                              className="Label-bxMjsr cBsFJx"
                                              htmlFor="name"
                                              onClick={[Function]}
                                            >
                                              <LabelContent
                                                hasFocus={false}
                                              >
                                                <span
                                                  className="LabelContent-gWnUXw eGuzay"
                                                >
                                                  Your name
                                                  <Placeholder
                                                    hasFocus={false}
                                                  >
                                                    <span
                                                      className="Placeholder-iEcLMX fbeOYY"
                                                    >
                                                      <i>
                                                        (e.g. John Doo)
                                                      </i>
                                                    </span>
                                                  </Placeholder>
                                                </span>
                                              </LabelContent>
                                            </label>
                                          </Label>
                                          <StyledInput
                                            innerRef={[Function]}
                                            name="name"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="StyledInput-dwXrMm kInwBn"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledInput>
                                          <SubText>
                                            <div
                                              className="SubText-VSxHA eYTSar"
                                            >
                                              <ErrorMessage
                                                showError={false}
                                              >
                                                <span
                                                  className="ErrorMessage-eJhZpN cVajIv"
                                                >
                                                  false 
                                                </span>
                                              </ErrorMessage>
                                              <span>
                                                <span>
                                                  Please add your name here.
                                                   
                                                  <FormattedMessage
                                                    defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
                                                    id="portfolio.components.Form.helperText.range"
                                                    values={
                                                      Object {
                                                        "count": 0,
                                                        "maxLength": 50,
                                                        "minLength": 2,
                                                      }
                                                    }
                                                  >
                                                    <span>
                                                      Should be between 2 and 50 characters. Is now: 0
                                                    </span>
                                                  </FormattedMessage>
                                                </span>
                                              </span>
                                            </div>
                                          </SubText>
                                        </div>
                                      </InputGroup>
                                    </Input>
                                    <Input
                                      changeHandler={[Function]}
                                      helperText="Please add your email address here."
                                      inputType="email"
                                      label="Your email address"
                                      name="email"
                                      placeholder="(e.g. my@email.com)"
                                      validate={[Function]}
                                      value=""
                                    >
                                      <InputGroup>
                                        <div
                                          className="InputGroup-bLbrFg lklykp"
                                        >
                                          <Label
                                            htmlFor="name"
                                            onClick={[Function]}
                                          >
                                            <label
                                              className="Label-bxMjsr cBsFJx"
                                              htmlFor="name"
                                              onClick={[Function]}
                                            >
                                              <LabelContent
                                                hasFocus={false}
                                              >
                                                <span
                                                  className="LabelContent-gWnUXw eGuzay"
                                                >
                                                  Your email address
                                                  <Placeholder
                                                    hasFocus={false}
                                                  >
                                                    <span
                                                      className="Placeholder-iEcLMX fbeOYY"
                                                    >
                                                      <i>
                                                        (e.g. my@email.com)
                                                      </i>
                                                    </span>
                                                  </Placeholder>
                                                </span>
                                              </LabelContent>
                                            </label>
                                          </Label>
                                          <StyledInput
                                            innerRef={[Function]}
                                            name="email"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            type="email"
                                            value=""
                                          >
                                            <input
                                              className="StyledInput-dwXrMm kInwBn"
                                              name="email"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              type="email"
                                              value=""
                                            />
                                          </StyledInput>
                                          <SubText>
                                            <div
                                              className="SubText-VSxHA eYTSar"
                                            >
                                              <ErrorMessage
                                                showError={false}
                                              >
                                                <span
                                                  className="ErrorMessage-eJhZpN cVajIv"
                                                >
                                                  false 
                                                </span>
                                              </ErrorMessage>
                                              <span>
                                                <span>
                                                  Please add your email address here.
                                                   
                                                </span>
                                              </span>
                                            </div>
                                          </SubText>
                                        </div>
                                      </InputGroup>
                                    </Input>
                                  </div>
                                  <Footer>
                                    <div
                                      className="Footer-iInldp gRvKfv"
                                    >
                                      <SubmitButton
                                        buttonState="idle"
                                        formIsValid={false}
                                      >
                                        <Button
                                          isEnabled={false}
                                        >
                                          <button
                                            className="Button-kDSBcD cdDmvZ"
                                          >
                                            <span>
                                              <SVGIcon
                                                viewBox="0 0 512 512"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="SVGIcon-ixpDyI gIDnTS"
                                                  focusable="false"
                                                  viewBox="0 0 512 512"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z"
                                                  />
                                                </svg>
                                              </SVGIcon>
                                              <Label>
                                                <span
                                                  className="Label-bxMjsr kEMeDd"
                                                >
                                                  <FormattedMessage
                                                    defaultMessage="Send"
                                                    id="portfolio.components.SubmitButton.idle"
                                                    values={Object {}}
                                                  >
                                                    <span>
                                                      Send
                                                    </span>
                                                  </FormattedMessage>
                                                </span>
                                              </Label>
                                            </span>
                                          </button>
                                        </Button>
                                      </SubmitButton>
                                    </div>
                                  </Footer>
                                </div>
                              </div>
                            </form>
                          </Form>
                        </ContactForm>
                      </InjectIntl(ContactForm)>
                    </div>
                  </Bubble>
                  <Arrow
                    arrowPosition="bottom-right"
                    backgroundColor="#aedd2c"
                    height="9vh"
                    isGhost={false}
                    showBreakpoint="750px"
                  >
                    <Arrow__SVG
                      arrowPosition="bottom-right"
                      height="9vh"
                      showBreakpoint="750px"
                    >
                      <svg
                        className="Arrow__SVG-iWxuxU bOIamW"
                        focusable="false"
                        height="9vh"
                        preserveAspectRatio="xMinYMid meet"
                        viewBox="0 0 848 640"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M424.2 424.4L526.9 640V398.7"
                          fill="#bfe458"
                          stroke="none"
                          strokeWidth="24"
                        />
                        <path
                          d="M848 318.3L424.2 424.4V158.9"
                          fill="#aedd2c"
                          stroke="none"
                          strokeWidth="24"
                        />
                        <path
                          d="M0 0l848 318.3L636.4 0H0z"
                          fill="#bfe458"
                          stroke="none"
                          strokeWidth="24"
                        />
                      </svg>
                    </Arrow__SVG>
                  </Arrow>
                </div>
              </Container>
            </SpeechBubble>
          </div>
        </ContentWrapper>
      </div>
    </Wrapper>
  </PageContent>
</ContactPage>
`;
