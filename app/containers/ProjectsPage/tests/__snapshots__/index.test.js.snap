// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectsPage /> Expect to render and match the snapshot 1`] = `
<React.Fragment>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "metaDescription": Object {
          "defaultMessage": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
          "id": "portfolio.page.ProjectsPage.meta.description",
        },
        "pageTitle": Object {
          "defaultMessage": "MY PROJECTS",
          "id": "portfolio.page.ProjectsPage.pageTitle",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.page.ProjectsPage.title",
        },
      }
    }
    path="/projects"
  />
  <PageContent
    content={
      <Projects
        projects={
          Array [
            Object {
              "article": "# Article for test case

[add attributes to link](https://the.world/)
",
              "description": "Description for test case",
              "images": Array [
                Object {
                  "file": Object {
                    "fileName": "test-s.png",
                    "url": "/test-s.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-m.png",
                    "url": "/test-m.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-l.png",
                    "url": "/test-l.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-xl.png",
                    "url": "/test-xl.png",
                  },
                  "title": "Test image",
                },
              ],
              "thumbnail": Object {
                "file": Object {
                  "contentType": "image/png",
                  "details": Object {
                    "image": Object {
                      "height": 230,
                      "width": 345,
                    },
                    "size": 22495,
                  },
                  "fileName": "test-m.png",
                  "url": "/test-m.png",
                },
                "title": "Test image",
              },
              "title": "Title for test case",
            },
          ]
        }
        search=""
      />
    }
    noSpeechBubble={true}
    title={
      <FormattedMessage
        defaultMessage="MY PROJECTS"
        id="portfolio.page.ProjectsPage.pageTitle"
        values={Object {}}
      />
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> details page Should handle case where a non existent details page is requested 1`] = `
<React.Fragment>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "metaDescription": Object {
          "defaultMessage": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
          "id": "portfolio.page.ProjectsPage.meta.description",
        },
        "pageTitle": Object {
          "defaultMessage": "MY PROJECTS",
          "id": "portfolio.page.ProjectsPage.pageTitle",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.page.ProjectsPage.title",
        },
      }
    }
    path="/projects/nothing-here"
  />
  <PageContent
    content={
      <Projects
        projects={
          Array [
            Object {
              "article": "# Article for test case

[add attributes to link](https://the.world/)
",
              "description": "Description for test case",
              "images": Array [
                Object {
                  "file": Object {
                    "fileName": "test-s.png",
                    "url": "/test-s.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-m.png",
                    "url": "/test-m.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-l.png",
                    "url": "/test-l.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-xl.png",
                    "url": "/test-xl.png",
                  },
                  "title": "Test image",
                },
              ],
              "thumbnail": Object {
                "file": Object {
                  "contentType": "image/png",
                  "details": Object {
                    "image": Object {
                      "height": 230,
                      "width": 345,
                    },
                    "size": 22495,
                  },
                  "fileName": "test-m.png",
                  "url": "/test-m.png",
                },
                "title": "Test image",
              },
              "title": "Title for test case",
            },
          ]
        }
        search=""
      />
    }
    noSpeechBubble={true}
    title={
      <FormattedMessage
        defaultMessage="MY PROJECTS"
        id="portfolio.page.ProjectsPage.pageTitle"
        values={Object {}}
      />
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> details page Should render the details page when requested 1`] = `
<React.Fragment>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "metaDescription": Object {
          "defaultMessage": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
          "id": "portfolio.page.ProjectsPage.meta.description",
        },
        "pageTitle": Object {
          "defaultMessage": "MY PROJECTS",
          "id": "portfolio.page.ProjectsPage.pageTitle",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.page.ProjectsPage.title",
        },
      }
    }
    path="/projects/title-for-test-case"
  />
  <PageContent
    content={
      <Projects
        projects={
          Array [
            Object {
              "article": "# Article for test case

[add attributes to link](https://the.world/)
",
              "description": "Description for test case",
              "images": Array [
                Object {
                  "file": Object {
                    "fileName": "test-s.png",
                    "url": "/test-s.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-m.png",
                    "url": "/test-m.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-l.png",
                    "url": "/test-l.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-xl.png",
                    "url": "/test-xl.png",
                  },
                  "title": "Test image",
                },
              ],
              "thumbnail": Object {
                "file": Object {
                  "contentType": "image/png",
                  "details": Object {
                    "image": Object {
                      "height": 230,
                      "width": 345,
                    },
                    "size": 22495,
                  },
                  "fileName": "test-m.png",
                  "url": "/test-m.png",
                },
                "title": "Test image",
              },
              "title": "Title for test case",
            },
          ]
        }
        search=""
      />
    }
    noSpeechBubble={true}
    title={
      <FormattedMessage
        defaultMessage="MY PROJECTS"
        id="portfolio.page.ProjectsPage.pageTitle"
        values={Object {}}
      />
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> fetching content from external source should handle case where no content is received 1`] = `
<React.Fragment>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "metaDescription": Object {
          "defaultMessage": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
          "id": "portfolio.page.ProjectsPage.meta.description",
        },
        "pageTitle": Object {
          "defaultMessage": "MY PROJECTS",
          "id": "portfolio.page.ProjectsPage.pageTitle",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.page.ProjectsPage.title",
        },
      }
    }
    path="blank"
  />
  <React.Fragment />
</React.Fragment>
`;

exports[`<ProjectsPage /> fetching content from external source should show an error message when content could not be loaded 1`] = `
<React.Fragment>
  <InjectIntl(HeadGear)
    messages={
      Object {
        "metaDescription": Object {
          "defaultMessage": "This is an overview of my projects. Projects are sorted by date with the most recent on top",
          "id": "portfolio.page.ProjectsPage.meta.description",
        },
        "pageTitle": Object {
          "defaultMessage": "MY PROJECTS",
          "id": "portfolio.page.ProjectsPage.pageTitle",
        },
        "title": Object {
          "defaultMessage": "Johan Meester : Portfolio : Front-End Developer : {pageTitle}",
          "id": "portfolio.page.ProjectsPage.title",
        },
      }
    }
    path="blank"
  />
  <ContentLoadingIndicator
    show={true}
    showError={true}
  />
</React.Fragment>
`;
