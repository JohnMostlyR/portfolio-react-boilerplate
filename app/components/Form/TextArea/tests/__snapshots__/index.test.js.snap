// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextArea /> should act when receiving focus 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={true}
    >
      This is the label text
      <Placeholder
        hasFocus={true}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    myHeight={0}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="The value"
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      false 
    </ErrorMessage>
    <span>
      <span>
        This is a helper text
         
        <FormattedMessage
          defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
          id="portfolio.components.Form.helperText.range"
          values={
            Object {
              "count": 9,
              "maxLength": 300,
              "minLength": 1,
            }
          }
        />
      </span>
    </span>
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> should receive all properties 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={true}
    >
      This is the label text
      <Placeholder
        hasFocus={true}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    myHeight={0}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="The value"
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      false 
    </ErrorMessage>
    <span>
      <FormattedMessage
        defaultMessage="Thanks!"
        id="portfolio.components.Form.helperText.valid"
        values={Object {}}
      />
    </span>
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> should render with only the required properties and match the snapshot 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={false}
    >
      This is the label text
      <Placeholder
        hasFocus={false}
      >
        <i />
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    myHeight={0}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      false 
    </ErrorMessage>
    <span />
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> when a user populates the field should adjust the height when needed 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={true}
    >
      This is the label text
      <Placeholder
        hasFocus={true}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    myHeight={32}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="testing123
testing
testing
123"
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      Error, Error, Error 
    </ErrorMessage>
    <span>
      <span>
        This is a helper text
         
        <FormattedMessage
          defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
          id="portfolio.components.Form.helperText.range"
          values={
            Object {
              "count": 30,
              "maxLength": 300,
              "minLength": 1,
            }
          }
        />
      </span>
    </span>
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> when a user populates the field should not show any errors as long as the field has the focus 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={true}
    >
      This is the label text
      <Placeholder
        hasFocus={true}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="testing123
testing
testing
123"
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      Error message. 
    </ErrorMessage>
    <span>
      <span>
        This is a helper text
         
        <FormattedMessage
          defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
          id="portfolio.components.Form.helperText.range"
          values={
            Object {
              "count": 30,
              "maxLength": 300,
              "minLength": 1,
            }
          }
        />
      </span>
    </span>
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> when a user populates the field should update the helper text, when available 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={true}
    >
      This is the label text
      <Placeholder
        hasFocus={true}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="testing123
testing
testing
123"
  />
  <SubText>
    <ErrorMessage
      showError={false}
    >
      Error, Error, Error 
    </ErrorMessage>
    <span>
      <span>
        This is a helper text
         
        <FormattedMessage
          defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
          id="portfolio.components.Form.helperText.range"
          values={
            Object {
              "count": 30,
              "maxLength": 300,
              "minLength": 1,
            }
          }
        />
      </span>
    </span>
  </SubText>
</InputGroup>
`;

exports[`<TextArea /> when moving away should show an error message when the input is not correct 1`] = `
<InputGroup>
  <Label
    htmlFor="name"
    onClick={[Function]}
  >
    <LabelContent
      hasFocus={false}
    >
      This is the label text
      <Placeholder
        hasFocus={false}
      >
        <i>
          This is the placeholder text
        </i>
      </Placeholder>
    </LabelContent>
  </Label>
  <StyledTextArea
    innerRef={[Function]}
    myHeight={0}
    name="This is the input its name"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value=""
  />
  <SubText>
    <ErrorMessage
      showError={true}
    >
      Error, Error, Error 
    </ErrorMessage>
    <span>
      <span>
        This is a helper text
         
        <FormattedMessage
          defaultMessage="Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}"
          id="portfolio.components.Form.helperText.range"
          values={
            Object {
              "count": 0,
              "maxLength": 300,
              "minLength": 1,
            }
          }
        />
      </span>
    </span>
  </SubText>
</InputGroup>
`;
